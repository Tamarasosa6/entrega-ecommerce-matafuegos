<!-- views/realTimeProducts.handlebars -->
<h1>Productos en Tiempo Real</h1>

<!-- Formulario para agregar un producto -->
<form id="addProductForm">
    <input type="text" name="title" placeholder="Título" required>
    <input type="text" name="description" placeholder="Descripción" required>
    <input type="text" name="code" placeholder="Código" required>
    <input type="number" name="price" placeholder="Precio" required>
    <input type="number" name="stock" placeholder="Stock" required>
    <input type="text" name="category" placeholder="Categoría" required>
    <select name="type" required>
        <option value="" disabled selected>Selecciona el tipo de matafuego</option>
        <option value="ABC">ABC</option>
        <option value="BC">BC</option>
        <option value="CO2">CO2</option>
        <option value="AFFF">AFFF</option>
        <option value="K">K</option>
        <option value="D">D</option>
    </select>
    <input type="text" name="thumbnails" placeholder="URL de la imagen (opcional)">
    <input type="text" name="certifications" placeholder="Certificaciones (opcional, ej. IRAM)">
    <button type="submit">Agregar Producto</button>
</form>

<!-- Formulario para eliminar un producto -->
<form id="deleteProductForm">
    <input type="text" name="id" placeholder="ID del producto a eliminar" required>
    <button type="submit">Eliminar Producto</button>
</form>

<!-- Lista de productos -->
<h2>Lista de Matafuegos</h2>
<ul id="productsList">
    {{#each products}}
        <li>{{this.title}} - ${{this.price}} (Stock: {{this.stock}}, Tipo: {{this.type}})</li>
    {{/each}}
</ul>

<!-- Conexión a WebSockets -->
<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();

    // Enviar producto nuevo
    document.getElementById('addProductForm').addEventListener('submit', (e) => {
        e.preventDefault();
        const formData = new FormData(e.target);
        const product = {
            title: formData.get('title'),
            description: formData.get('description'),
            code: formData.get('code'),
            price: parseFloat(formData.get('price')),
            stock: parseInt(formData.get('stock')),
            category: formData.get('category'),
            type: formData.get('type'),
            thumbnails: formData.get('thumbnails') ? [formData.get('thumbnails')] : [],
            certifications: formData.get('certifications') ? [formData.get('certifications')] : []
        };
        socket.emit('addProduct', product);
        e.target.reset();
    });

    // Eliminar producto
    document.getElementById('deleteProductForm').addEventListener('submit', (e) => {
        e.preventDefault();
        const id = e.target.querySelector('input[name="id"]').value;
        socket.emit('deleteProduct', id);
        e.target.reset();
    });

    // Actualizar lista de productos en tiempo real
    socket.on('updateProducts', (products) => {
        const productsList = document.getElementById('productsList');
        productsList.innerHTML = '';
        products.forEach(product => {
            const li = document.createElement('li');
            li.textContent = `${product.title} - $${product.price} (Stock: ${product.stock}, Tipo: ${product.type})`;
            productsList.appendChild(li);
        });
    });
</script>

